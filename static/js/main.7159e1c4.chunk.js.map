{"version":3,"sources":["server/getFromServer.js","server/postToServer.js","components/ExtraButtons.jsx","components/FilterForm.jsx","components/UserCard.jsx","components/FindNewFriend.jsx","components/MyFriends.jsx","components/HomePage.jsx","components/ChatBoard.jsx","components/MessageCard.jsx","components/Messages.jsx","App.jsx","index.js"],"names":["getPeopleFromLocalStorage","JSON","parse","localStorage","getItem","getFilteredPeopleFromLocalStorage","getMyFriends","getChat","postPeopleToLocalStorage","data","setItem","stringify","postFilteredPeopleToLocalStorage","postChat","ExtraButtons","numberOfUsers","setNumberOfUsers","setLoadNewUsers","className","htmlFor","type","id","value","onChange","event","target","onClick","FilterForm","setRandomUsers","useState","filterByGender","setFilterByGender","filterByNationality","setFilterByNationality","filterByAgeFrom","setFilterByAgeFrom","filterByAgeTo","setFilterByAgeTo","onSubmit","preventDefault","name","multiple","size","find","nat","result","index","indexOf","splice","handleAddFilterByNationality","gender","nationality","from","to","length","storage","filter","user","dob","age","genderUsers","i","y","push","filterUsers","UserCard","users","setUsers","button","handleAddFriend","people","person","email","filteredPeople","myFriends","map","src","picture","large","alt","first","draggable","last","href","phone","date","substr","FindNewFriend","loadNewUsers","randomUsers","useEffect","randomUserURL","fetch","then","response","json","results","MyFriends","setMyFriends","HomePage","setName","avatar","setAvatar","registePage","setRegisterPage","handleSubmit","postAvatar","ChatBoard","selectedChat","message","setMessage","chat","setChat","sendMessage","text","a","fromUser","uid","time","Date","toLocaleTimeString","fromBot","method","headers","cnt","botttom","useRef","current","scrollIntoView","behavior","scrollToBottom","hasOwnProperty","item","mess","classNames","ref","onKeyPress","key","autoFocus","placeholder","MessageCard","selectedUser","setSelectedUser","thumbnail","Messages","setSelectedChat","App","isActive","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7159e1c4.chunk.js","sourcesContent":["export function getPeopleFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('randomPeople'));\n}\n\nexport function getFilteredPeopleFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('filteredPeople'));\n}\n\nexport function getMyFriends() {\n  return JSON.parse(localStorage.getItem('myFriends'));\n}\n\nexport function getChat() {\n  return JSON.parse(localStorage.getItem('chat'));\n}\n\nexport function getName() {\n  return JSON.parse(localStorage.getItem('name'));\n}\n\nexport function getAvatar() {\n  return JSON.parse(localStorage.getItem('avatar'));\n}\n","export function postPeopleToLocalStorage(data) {\n  localStorage.setItem('randomPeople', JSON.stringify(data))\n}\n\nexport function postFilteredPeopleToLocalStorage(data) {\n  localStorage.setItem('filteredPeople', JSON.stringify(data))\n}\n\nexport function postMyFriendToLocalStorage(data) {\n  localStorage.setItem('myFriends', JSON.stringify(data))\n}\n\nexport function postChat(data) {\n  localStorage.setItem('chat', JSON.stringify(data))\n}\n\nexport function postName(data) {\n  localStorage.setItem('name', JSON.stringify(data))\n}\n\nexport function postAvatar(data) {\n  localStorage.setItem('avatar', JSON.stringify(data))\n}\n","export const ExtraButtons = ({\n  numberOfUsers,\n  setNumberOfUsers,\n  setLoadNewUsers,\n}) => {\n  return (\n    <div className=\"extra-buttons\">\n      <label className=\"label\" htmlFor=\"numder-of-users\">\n        How many users to download\n        <input\n          type=\"number\"\n          id=\"numder-of-users\"\n          value={numberOfUsers}\n          onChange={(event) => {\n            if (event.target.value >= 500) {\n              setNumberOfUsers(500);\n            } else if (event.target.value > 0) {\n              setNumberOfUsers(event.target.value);\n            }\n          }}\n        />\n      </label>\n\n      <button className=\"button\" onClick={() => setLoadNewUsers(true)}>\n        Load new users\n      </button>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { getPeopleFromLocalStorage } from '../server/getFromServer';\nimport { postFilteredPeopleToLocalStorage } from '../server/postToServer';\n\nexport const FilterForm = ({ setRandomUsers }) => {\n  const [filterByGender, setFilterByGender] = useState('all');\n  const [filterByNationality, setFilterByNationality] = useState([]);\n  const [filterByAgeFrom, setFilterByAgeFrom] = useState(18);\n  const [filterByAgeTo, setFilterByAgeTo] = useState(90);\n\n  const handleAddFilterByNationality = (value) => {\n    if (!filterByNationality.find((nat) => nat === value)) {\n      setFilterByNationality([...filterByNationality, value]);\n    }\n\n    if (filterByNationality.find((nat) => nat === value)) {\n      const result = filterByNationality;\n      const index = result.indexOf(value);\n      result.splice(index, 1);\n      setFilterByNationality(result);\n    }\n  };\n\n  const filterUsers = (gender, nationality, from, to) => {\n    setFilterByGender('all');\n    setFilterByNationality([]);\n\n    if (\n      gender === 'all' &&\n      nationality.length === 0 &&\n      +from === 18 &&\n      +to === 90\n    ) {\n      setRandomUsers(getPeopleFromLocalStorage());\n\n      return;\n    }\n\n    const storage = getPeopleFromLocalStorage().filter(\n      (user) => user.dob.age > +from && user.dob.age < +to\n    );\n    const result = [];\n\n    if (+from !== 18 || +to !== 90) {\n      setRandomUsers(storage);\n      postFilteredPeopleToLocalStorage(storage);\n    }\n\n    if (gender !== 'all' && nationality.length) {\n      const genderUsers = storage.filter((user) => user.gender === gender);\n\n      for (let i = 0; i < genderUsers.length; i++) {\n        for (let y = 0; y < nationality.length; y++) {\n          if (genderUsers[i].nat === nationality[y]) {\n            result.push(genderUsers[i]);\n          }\n        }\n      }\n\n      setRandomUsers(result);\n      postFilteredPeopleToLocalStorage(result);\n\n      return;\n    } else if (gender !== 'all') {\n      setRandomUsers(storage.filter((user) => user.gender === gender));\n      postFilteredPeopleToLocalStorage(\n        storage.filter((user) => user.gender === gender)\n      );\n    } else if (nationality.length) {\n      for (let i = 0; i < storage.length; i++) {\n        for (let y = 0; y < nationality.length; y++) {\n          if (storage[i].nat === nationality[y]) {\n            result.push(storage[i]);\n          }\n        }\n      }\n\n      setRandomUsers(result);\n      postFilteredPeopleToLocalStorage(result);\n    }\n  };\n\n  return (\n    <form className=\"filter-form\" onSubmit={(event) => event.preventDefault()}>\n      <b className=\"filter-form__categorie-title\">Categories</b>\n\n      <label className=\"filter-form__label\" htmlFor=\"filterByGender\">\n        <b>Gender</b>\n        <select\n          value={filterByGender}\n          onChange={(event) => setFilterByGender(event.target.value)}\n          name=\"gender\"\n          id=\"filterByGender\"\n          className=\"filter-form__select\"\n        >\n          <option value=\"all\">All</option>\n          <option value=\"male\">Male</option>\n          <option value=\"female\">Female</option>\n        </select>\n      </label>\n\n      <label className=\"filter-form__label\" htmlFor=\"filterByNationality\">\n        <b>Nationality</b>\n        <select\n          multiple\n          size=\"5\"\n          value={filterByNationality}\n          onChange={(event) => handleAddFilterByNationality(event.target.value)}\n          name=\"nationality\"\n          id=\"filterByNationality\"\n          className=\"filter-form__select\"\n        >\n          <option value=\"AU\">AU</option>\n          <option value=\"BR\">BR</option>\n          <option value=\"CA\">CA</option>\n          <option value=\"CH\">CH</option>\n          <option value=\"DE\">DE</option>\n          <option value=\"DK\">DK</option>\n          <option value=\"ES\">ES</option>\n          <option value=\"FI\">FI</option>\n          <option value=\"FR\">FR</option>\n          <option value=\"GB\">GB</option>\n          <option value=\"IE\">IE</option>\n          <option value=\"IR\">IR</option>\n          <option value=\"NO\">NO</option>\n          <option value=\"NL\">NL</option>\n          <option value=\"NZ\">NZ</option>\n          <option value=\"TR\">TR</option>\n          <option value=\"US\">US</option>\n        </select>\n        <button className=\"button\" onClick={() => setFilterByNationality([])}>\n          Clear nationality filter\n        </button>\n      </label>\n\n      <label className=\"filter-form__label\" htmlFor=\"filterByAge\">\n        <b>Age</b>\n        <div className=\"from-to\">\n          <input\n            className=\"filter-form__fromTo\"\n            value={filterByAgeFrom}\n            type=\"number\"\n            name=\"age-from\"\n            id=\"filterByAge\"\n            onChange={(event) => {\n              if (event.target.value >= 0) {\n                setFilterByAgeFrom(event.target.value);\n              }\n\n              if (event.target.value >= filterByAgeTo) {\n                setFilterByAgeFrom(filterByAgeTo - 1);\n              }\n            }}\n          />\n          —\n          <input\n            className=\"filter-form__fromTo\"\n            value={filterByAgeTo}\n            type=\"number\"\n            name=\"age-to\"\n            id=\"filterByAge\"\n            onChange={(event) => {\n              if (event.target.value >= 0) {\n                setFilterByAgeTo(event.target.value);\n              }\n\n              if (event.target.value <= filterByAgeFrom) {\n                setFilterByAgeTo(+filterByAgeFrom + 1);\n              }\n\n              if (event.target.value >= 90) {\n                setFilterByAgeTo(90);\n              }\n            }}\n          />\n        </div>\n      </label>\n\n      <button\n        className=\"button\"\n        onClick={() =>\n          filterUsers(\n            filterByGender,\n            filterByNationality,\n            filterByAgeFrom,\n            filterByAgeTo\n          )\n        }\n      >\n        Apply filters\n      </button>\n\n      <button\n        className=\"button\"\n        onClick={() => {\n          const storage = getPeopleFromLocalStorage();\n          setRandomUsers(storage);\n          localStorage.setItem('filteredPeople', JSON.stringify(storage));\n          setFilterByGender('all');\n          setFilterByNationality([]);\n        }}\n      >\n        Clear filter\n      </button>\n    </form>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport {\n  getFilteredPeopleFromLocalStorage,\n  getMyFriends,\n  getPeopleFromLocalStorage,\n} from '../server/getFromServer';\nimport {\n  postFilteredPeopleToLocalStorage,\n  postMyFriendToLocalStorage,\n  postPeopleToLocalStorage,\n} from '../server/postToServer';\n\nexport const UserCard = ({ users, setUsers, button }) => {\n  const handleAddFriend = (user) => {\n    const people = getPeopleFromLocalStorage().filter(\n      (person) => person.email !== user.email\n    );\n    const filteredPeople = getFilteredPeopleFromLocalStorage().filter(\n      (person) => person.email !== user.email\n    );\n    const myFriends = getMyFriends() || [];\n    myFriends.push(user);\n\n    postPeopleToLocalStorage(people);\n    postFilteredPeopleToLocalStorage(filteredPeople);\n    postMyFriendToLocalStorage(myFriends);\n\n    setUsers(filteredPeople);\n  };\n\n  return (\n    <>\n      {users.map((user) => (\n        <div className=\"card\" key={user.email}>\n          <img\n            className=\"card__user-photo\"\n            src={user.picture.large}\n            alt={user.name.first}\n            draggable={false}\n          />\n\n          <div className=\"card__user-info\">\n            <b className=\"card__name\">\n              {`${user.name.first} ${user.name.last}`}\n            </b>\n\n            <a className=\"card__email\" href={`mailto:${user.email}`}>\n              {user.email}\n            </a>\n\n            <a className=\"card__phone\" href={`tel:+${user.phone}`}>\n              {user.phone}\n            </a>\n            <div className=\"card__dob\">\n              {`${user.dob.date.substr(0, 10)}, (${user.dob.age} y.o.)`}\n            </div>\n\n            {button === 'add friend' && (\n              <button\n                onClick={() => handleAddFriend(user)}\n                className=\"button button__user-card\"\n              >\n                Add to friends\n              </button>\n            )}\n\n            {button === 'open chat' && (\n              <Link\n                to=\"/messages\"\n                className=\"button button__user-card\"\n              >\n                Send message\n              </Link>\n            )}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  getFilteredPeopleFromLocalStorage,\n  getPeopleFromLocalStorage,\n} from '../server/getFromServer';\nimport {\n  postFilteredPeopleToLocalStorage,\n  postPeopleToLocalStorage,\n} from '../server/postToServer';\nimport { ExtraButtons } from './ExtraButtons';\nimport { FilterForm } from './FilterForm';\nimport { UserCard } from './UserCard';\n\nexport const FindNewFriend = () => {\n  const [loadNewUsers, setLoadNewUsers] = useState(false);\n  const [numberOfUsers, setNumberOfUsers] = useState(50);\n  const [randomUsers, setRandomUsers] = useState(\n    getFilteredPeopleFromLocalStorage() || getPeopleFromLocalStorage() || []\n  );\n\n  useEffect(() => {\n    if (!randomUsers.length || loadNewUsers) {\n      const randomUserURL = `https://randomuser.me/api/?results=${numberOfUsers}&inc=gender,email,dob,name,picture,nat,phone`;\n\n      fetch(randomUserURL)\n        .then((response) => response.json())\n        .then((response) => {\n          setRandomUsers(response.results);\n          postPeopleToLocalStorage(response.results);\n          postFilteredPeopleToLocalStorage(response.results);\n        });\n\n      setLoadNewUsers(false);\n    }\n  }, [loadNewUsers]);\n\n  return (\n    <>\n      <main className=\"main\">\n        <div className=\"main__left-bar\">\n          <FilterForm setRandomUsers={setRandomUsers} />\n        </div>\n\n        <div className=\"main__users\">\n          <UserCard\n            users={randomUsers}\n            setUsers={setRandomUsers}\n            button={'add friend'}\n          />\n        </div>\n      </main>\n\n      <footer className=\"footer\">\n        <ExtraButtons\n          numberOfUsers={numberOfUsers}\n          setNumberOfUsers={setNumberOfUsers}\n          setLoadNewUsers={setLoadNewUsers}\n        />\n      </footer>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMyFriends } from '../server/getFromServer';\nimport { UserCard } from './UserCard';\n\nexport const MyFriends = () => {\n  const [myFriends, setMyFriends] = useState(getMyFriends() || []);\n\n  return (\n    <main className=\"main\">\n      <div className=\"main__left-bar\">\n        {myFriends.length ? (\n          <>\n          </>\n        ) : (\n          <Link to=\"/fnf\" className=\"button button__no-friends\">\n            Find your friends first\n          </Link>\n        )}\n      </div>\n\n      <div className=\"main__users\">\n        <UserCard\n          users={myFriends}\n          setUsers={setMyFriends}\n          button={'open chat'}\n        />\n      </div>\n    </main>\n  );\n};\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAvatar, getMyFriends, getName } from '../server/getFromServer';\nimport { postAvatar, postName } from '../server/postToServer';\n\nexport const HomePage = () => {\n  const [name, setName] = useState(getName() || '');\n  const [avatar, setAvatar] = useState(getAvatar() || '');\n  const [registePage, setRegisterPage] = useState(() => (name ? false : true));\n\n  const handleSubmit = () => {\n    setRegisterPage(false);\n    postName(name || 'Jhon Doe');\n    postAvatar(avatar || 'https://fn.zhirkiller.com/wp-content/uploads/2018/09/no-avatar.png');\n  };\n\n  return (\n    <main className=\"main\">\n      {registePage ? (\n        <form onSubmit={(event) => event.preventDefault()} className=\"profile\">\n          <label className=\"label\" htmlFor=\"avatarURL\">\n            Insert the URL path to the desired avatar\n            <input\n              value={avatar}\n              onChange={(event) => setAvatar(event.target.value)}\n              type=\"url\"\n              name=\"avatarURL\"\n              id=\"avatarURL\"\n            />\n          </label>\n\n          <label className=\"label\" htmlFor=\"profileName\">\n            Write the desired nickname\n            <input\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              type=\"text\"\n              name=\"profileName\"\n              id=\"profileName\"\n            />\n          </label>\n\n          <button className=\"button\" onClick={() => handleSubmit()}>\n            Save\n          </button>\n        </form>\n      ) : (\n        <div className=\"profile\">\n          <img\n            className=\"profile__avatar\"\n            src={avatar || 'https://abroad.ru/images/new_abroad/no-avatar.png'}\n            alt=\"avatar\"\n            draggable={false}\n          />\n\n          <h1 className=\"profile__name\">{name}</h1>\n\n          <Link to=\"/mf\" className=\"button button__profile\">\n            {`Friends: ${getMyFriends()?.length || 0}`}\n          </Link>\n        </div>\n      )}\n    </main>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useRef, useState } from 'react';\nimport { getChat } from '../server/getFromServer';\nimport { postChat } from '../server/postToServer';\n\nexport const ChatBoard = ({ selectedChat }) => {\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState(getChat() || []);\n\n  const sendMessage = async (from, text) => {\n    if (!text) {\n      return;\n    }\n\n    setMessage('');\n\n    const fromUser = {\n      uid: from,\n      from: 'user',\n      time: new Date().toLocaleTimeString(),\n      text,\n    };\n\n    const fromBot = {\n      uid: from,\n      from: 'bot',\n      time: new Date().toLocaleTimeString(),\n      text: '',\n    };\n\n    await fetch(\n      `https://acobot-brainshop-ai-v1.p.rapidapi.com/get?bid=178&key=sX5A2PcYZbsN5EY6&uid=${from}&msg=${text}`,\n      {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-host': 'acobot-brainshop-ai-v1.p.rapidapi.com',\n          'x-rapidapi-key':\n            'c07d60815dmsh74b28067c3f1e0dp109a4ajsn64c2d0a5b6c0',\n        },\n      }\n    )\n      .then((response) => response.text())\n      .then((response) => (fromBot.text = JSON.parse(response).cnt));\n\n    const data = [...chat, fromUser, fromBot];\n\n    postChat(data);\n    setChat(getChat());\n  };\n\n  const botttom = useRef(null);\n\n  const scrollToBottom = () => {\n    botttom.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [chat])\n\n  return (\n    <>\n      {selectedChat.hasOwnProperty('email') ? (\n        <div className=\"chat-board\">\n          <div className=\"chat-area\">\n            {chat\n              .filter((item) => item.uid === selectedChat.email)\n              .map((mess) => (\n                <div\n                  // key={mess.email}\n                  className={classNames('chat-area__text', {\n                    'chat-area__text--user': mess.from === 'user',\n                    'chat-area__text--bot': mess.from === 'bot',\n                  })}\n                >\n                  <p className=\"chat-area__text-mess\">{mess.text}</p>\n                  <p className=\"chat-area__text-time\">{mess.time}</p>\n                </div>\n              ))}\n          </div>\n\n          <div ref={botttom} className=\"chat-area__send-message\">\n            <input\n              onKeyPress={(event) =>\n                event.key === 'Enter' &&\n                sendMessage(selectedChat.email, message)\n              }\n              autoFocus\n              className=\"chat-area__message\"\n              type=\"text\"\n              value={message}\n              onChange={(event) => setMessage(event.target.value)}\n              placeholder=\"Message\"\n            />\n\n            <button\n              onClick={() => sendMessage(selectedChat.email, message)}\n              className=\"chat-area__button\"\n            ></button>\n          </div>\n        </div>\n      ) : (\n        <h2>Select chat</h2>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\n\nexport const MessageCard = ({ myFriends, selectedUser, setSelectedUser }) => {\n  return (\n    <>\n      {myFriends.map((user) => (\n        <div\n          key={user.email}\n          className={classNames('message-card', {\n            'message-card--active': selectedUser === user.email,\n          })}\n          onClick={() => setSelectedUser(user.email)}\n        >\n          <img\n            className=\"message-card__photo\"\n            src={user.picture.thumbnail}\n            alt={user.name.first}\n            draggable={false}\n          />\n          <b className=\"message-card__name\">\n            {user.name.first}\n            <br />\n            {user.name.last}\n          </b>\n        </div>\n      ))}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMyFriends } from '../server/getFromServer';\nimport { ChatBoard } from './ChatBoard';\nimport { MessageCard } from './MessageCard';\n\nexport const Messages = () => {\n  const myFriends = getMyFriends() || [];\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedChat, setSelectedChat] = useState({});\n\n  useEffect(() => {\n    if (selectedUser === '') {\n      return;\n    }\n\n    setSelectedChat(myFriends.find((person) => person.email === selectedUser));\n  }, [selectedUser]);\n\n  return (\n    <main className=\"main\">\n      <div className=\"main__left-bar\">\n        {myFriends.length ? (\n          <MessageCard\n            myFriends={myFriends}\n            selectedUser={selectedUser}\n            setSelectedUser={setSelectedUser}\n          />\n        ) : (\n          <Link to=\"/fnf\" className=\"button button__no-friends\">\n            Find friends to start a conversation\n          </Link>\n        )}\n      </div>\n\n      {myFriends.length !== 0 && <ChatBoard selectedChat={selectedChat} />}\n    </main>\n  );\n};\n","import './App.scss';\nimport { Link, NavLink, Routes, Route } from 'react-router-dom';\nimport { FindNewFriend } from './components/FindNewFriend';\nimport { MyFriends } from './components/MyFriends';\nimport { HomePage } from './components/HomePage';\nimport { Messages } from './components/Messages';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"header__logo-title\">\n          <Link to=\"/\" className=\"logo\"></Link>\n          <h1 className=\"header__title\">friendbook</h1>\n        </div>\n        <nav className=\"nav\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) =>\n              'nav__button' + (isActive ? ' nav__button--active' : '')\n            }\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/mf\"\n            className={({ isActive }) =>\n              'nav__button' + (isActive ? ' nav__button--active' : '')\n            }\n          >\n            My friends\n          </NavLink>\n          <NavLink\n            to=\"/messages\"\n            className={({ isActive }) =>\n              'nav__button' + (isActive ? ' nav__button--active' : '')\n            }\n          >\n            Messages\n          </NavLink>\n          <NavLink\n            to=\"/fnf\"\n            className={({ isActive }) =>\n              'nav__button' + (isActive ? ' nav__button--active' : '')\n            }\n          >\n            Find new friend\n          </NavLink>\n        </nav>\n      </header>\n\n      <Routes>\n        <Route path=\"/fnf\" element={<FindNewFriend />} />\n        <Route path=\"/mf\" element={<MyFriends />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/\" element={<HomePage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}