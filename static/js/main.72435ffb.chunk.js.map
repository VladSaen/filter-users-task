{"version":3,"sources":["components/UserCard.jsx","components/FilterForm.jsx","App.jsx","index.js"],"names":["UserCard","randomUsers","map","user","className","src","picture","large","alt","name","first","last","gender","href","email","phone","nat","FilterForm","setRandomUsers","useState","filterByGender","setFilterByGender","filterByNationality","setFilterByNationality","onSubmit","event","preventDefault","htmlFor","value","onChange","target","id","multiple","find","result","index","indexOf","splice","handleAddFilterByNationality","onClick","nationality","length","storage","getPeopleFromLocalStorage","filter","forEach","localStorage","setItem","JSON","stringify","filterUsers","parse","getItem","App","count","randomUserURL","fetch","then","response","json","results","getNewPeople","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72435ffb.chunk.js","sourcesContent":["export const UserCard = ({ randomUsers }) => {\n  return (\n    <>\n      {randomUsers.map((user) => (\n        <div className=\"card\" key={user.email}>\n          <img src={user.picture.large} alt={user.name.first} />\n\n          <b className=\"card__name\">\n            {`${user.name.first} ${user.name.last}`}\n          </b>\n\n          {`Gender: ${user.gender}`}\n          <a className=\"card__email\" href={`mailto:${user.email}`}>{user.email}</a>\n          <a href={`tel:+${user.phone}`}>{user.phone}</a>\n          {user.nat}\n        </div>\n      ))}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { getPeopleFromLocalStorage } from '../App';\n\nexport const FilterForm = ({ setRandomUsers }) => {\n  const [filterByGender, setFilterByGender] = useState('all');\n  const [filterByNationality, setFilterByNationality] = useState([]);\n\n  const handleAddFilterByNationality = (value) => {\n    if (!filterByNationality.find((nat) => nat === value)) {\n      setFilterByNationality([...filterByNationality, value]);\n    }\n\n    if (filterByNationality.find((nat) => nat === value)) {\n      const result = filterByNationality;\n      const index = result.indexOf(value);\n      result.splice(index, 1);\n      setFilterByNationality(result);\n    }\n  };\n\n  const filterUsers = (gender, nationality = []) => {\n    if (gender === 'all' && !nationality.length) {\n      setRandomUsers(getPeopleFromLocalStorage());\n      return;\n    }\n\n    const storage = getPeopleFromLocalStorage();\n\n    if (gender !== 'all' && nationality.length) {\n      setRandomUsers(\n        storage.filter(\n          (user) => nationality.forEach(nat => user.gender === gender && user.nat === nat)\n        )\n      );\n      localStorage.setItem('filteredPeople', JSON.stringify(storage));\n    } else if (gender !== 'all') {\n      setRandomUsers(storage.filter((user) => user.gender === gender));\n      localStorage.setItem(\n        'filteredPeople',\n        JSON.stringify(storage.filter((user) => user.gender === gender))\n      );\n    } else if (nationality !== 'all') {\n      setRandomUsers(storage.filter((user) => user.nat === nationality));\n      localStorage.setItem(\n        'filteredPeople',\n        JSON.stringify(storage.filter((user) => user.nat === nationality))\n      );\n    }\n  };\n\n  return (\n    <form className=\"filter-form\" onSubmit={(event) => event.preventDefault()}>\n      <label className=\"filter-form__label\" htmlFor=\"filterByGender\">\n        gender\n        <select\n          value={filterByGender}\n          onChange={(event) => setFilterByGender(event.target.value)}\n          name=\"gender\"\n          id=\"filterByGender\"\n        >\n          <option value=\"all\">All</option>\n          <option value=\"male\">Male</option>\n          <option value=\"female\">Female</option>\n        </select>\n      </label>\n\n      <label className=\"filter-form__label\" htmlFor=\"filterByNationality\">\n        nationality\n        <select\n          multiple\n          value={filterByNationality}\n          onChange={(event) => handleAddFilterByNationality(event.target.value)}\n          name=\"nationality\"\n          id=\"filterByNationality\"\n        >\n          <option value=\"AU\">AU</option>\n          <option value=\"BR\">BR</option>\n          <option value=\"CA\">CA</option>\n          <option value=\"CH\">CH</option>\n          <option value=\"DE\">DE</option>\n          <option value=\"DK\">DK</option>\n          <option value=\"ES\">ES</option>\n          <option value=\"FI\">FI</option>\n          <option value=\"FR\">FR</option>\n          <option value=\"GB\">GB</option>\n          <option value=\"IE\">IE</option>\n          <option value=\"IR\">IR</option>\n          <option value=\"NO\">NO</option>\n          <option value=\"NL\">NL</option>\n          <option value=\"NZ\">NZ</option>\n          <option value=\"TR\">TR</option>\n          <option value=\"US\">US</option>\n        </select>\n      </label>\n\n      <button onClick={() => filterUsers(filterByGender, filterByNationality)}>\n        Apply filters\n      </button>\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { UserCard } from './components/UserCard';\n\nimport './App.scss';\nimport { FilterForm } from './components/FilterForm';\n\nexport function getPeopleFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('randomPeople'));\n}\n\nfunction getFilteredPeopleFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('filteredPeople'));\n}\n\nconst App = () => {\n  const [randomUsers, setRandomUsers] = useState(\n    getFilteredPeopleFromLocalStorage() || getPeopleFromLocalStorage() || getNewPeople(15)\n  );\n\n  // useEffect(() => {\n  //   if (randomUsers.length) {\n      \n  //   }\n  // }, [])\n\n  function getNewPeople(count = 15) {\n    const randomUserURL = `https://randomuser.me/api//?results=${count}`;\n\n    fetch(randomUserURL)\n      .then((response) => response.json())\n      .then((response) => {\n        setRandomUsers(response.results);\n        localStorage.setItem('randomPeople', JSON.stringify(response.results));\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <FilterForm setRandomUsers={setRandomUsers} />\n      </header>\n\n      <main className=\"main\">\n        <UserCard randomUsers={randomUsers} />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}